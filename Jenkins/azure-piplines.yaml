# Azure DevOps Pipeline for CI/CD Integration

trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: DockerHubSecrets
  - name: IMAGE_NAME
    value: 'rm13rotem/flask-aws-monitor'

stages:
# ---------------------------------------------
- stage: CloneRepository
  displayName: 'Clone Repository'
  jobs:
  - job: Clone
    steps:
      - checkout: self

# ---------------------------------------------
- stage: ParallelChecks
  displayName: 'Parallel Linting & Security Checks'
  dependsOn: CloneRepository
  jobs:
  - job: Linting
    displayName: 'Linting'
    steps:
      - script: |
          pip install flake8
          flake8 main.py || true
          echo "Pretending to lint Dockerfile with hadolint..."
      displayName: 'Run Python & Dockerfile Linting'

  - job: SecurityScanning
    displayName: 'Security Scanning'
    steps:
      - script: |
          pip install bandit
          bandit -r . || true
          echo "Pretending to scan Docker image with Trivy..."
      displayName: 'Run Bandit & Trivy (Mock)'

# ---------------------------------------------
- stage: BuildDockerImage
  displayName: 'Build Docker Image'
  dependsOn: ParallelChecks
  jobs:
  - job: BuildImage
    steps:
      - task: DockerInstaller@0
        displayName: 'Install Docker CLI'

      - script: |
          docker build -t $(IMAGE_NAME) .
        displayName: 'Build Docker Image'

# ---------------------------------------------
- stage: PushToDockerHub
  displayName: 'Push Docker Image to Docker Hub'
  dependsOn: BuildDockerImage
  jobs:
  - job: PushImage
    steps:
      - script: |
          echo "$(DOCKERHUB_PASSWORD)" | docker login -u "$(DOCKERHUB_USERNAME)" --password-stdin
          docker push $(IMAGE_NAME)
        displayName: 'Login and Push to Docker Hub'

# ---------------------------------------------
- stage: SecureCredentials
  displayName: 'Store and Use Secure Credentials'
  jobs:
  - job: StoreSecrets
    displayName: 'Ensure Credentials are Secure'
    steps:
      - script: |
          echo 'Use Azure DevOps UI to store Docker Hub credentials:'
          echo ' - DOCKERHUB_USERNAME'
          echo ' - DOCKERHUB_PASSWORD'
        displayName: 'Credential Handling Instruction'
